(define term (js-eval "document.getElementById('term')"))
(js-invoke (getelem term) "LoadingOverlay" "show" (js-obj "image" "" "progress" #t))
(set-style! term "font" "18px / 20px Courier New")
(sleep 0.5)
(js-invoke (getelem term) "LoadingOverlay" "progress" 10)
(if (not (string=? (get-style term "font") "18px / 20px Courier New"))
    (set-style! term "font" "18px / 20px monospace"))
(sleep 0.5)
(js-invoke (getelem term) "LoadingOverlay" "progress" 20)
(set-style! term "backgroundColor" "transparent")
(js-invoke (getelem term) "LoadingOverlay" "show")
(display "71456335213936339667583931974144970765327963434711239325932911324065698399442011")
(sleep 0.5)
(js-invoke (getelem term) "LoadingOverlay" "progress" 40)
(display "1085267300152893114288803146806622529202080626206924102794738916250870161499231")
(sleep 0.5)
(js-invoke (getelem term) "LoadingOverlay" "progress" 50)
(display "check...")
(sleep 0.5)
(js-invoke (getelem term) "LoadingOverlay" "progress" 60)
(display "loading..., pass 1..2")
(sleep 0.5)
(js-invoke (getelem term) "LoadingOverlay" "progress" 70)
(display "pass 3..4..")
(sleep 0.5)
(js-invoke (getelem term) "LoadingOverlay" "progress" 80)
(display "OK")
(clear)
(js-invoke (getelem term) "LoadingOverlay" "progress" 85)
(display "CTFという競技は\nいわゆるホワイトハッカー達\nが競い合っているセキュリティ大会です!")
(sleep 0.5)
(js-invoke (getelem term) "LoadingOverlay" "progress" 90)
(sleep 0.5)
(js-invoke (getelem term) "LoadingOverlay" "progress" 95)
(display "フラグは見つけられますか？")
(sleep 0.5)
(js-invoke (getelem term) "LoadingOverlay" "progress" 100)
(display "\"(help)\"とタイプすると助けを求めれます。")
(js-invoke (getelem term) "LoadingOverlay" "hide" #t)

(define (tictactoe)
  (letrec ((game-map '("1" "2" "3" "4" "5" "6" "7" "8" "9")) (print-board (lambda (gmap) (begin (display (list "----------\n|" (car gmap) "|" (cadr gmap) "|" (caddr gmap) "|")))(if (null? (cdddr gmap)) (begin  (display "------------") (newline)) (print-board (cdddr gmap))))) (update (lambda (num mark) (letrec ((nth-write (lambda (n m nlist) (let loop ((x 0)(nlist nlist)) (if (= x n) (apply list m (cdr nlist)) (cons (car nlist) (loop (+ x 1) (cdr nlist)))))))) (set! game-map (nth-write num mark game-map)) (print-board game-map)))) (check (lambda (mark) (call/cc (lambda (return) (letrec ((check-iter (lambda (mark check-map) (apply string=? (cons mark (map (lambda (x) (list-ref game-map x)) check-map)))))) (let loop ((check-map '((0 1 2)(3 4 5)(6 7 8)(0 3 6)(1 4 7)(2 5 8)(0 4 8)(2 4 6)))) (if (null? (cdr check-map)) (check-iter mark (car check-map)) (begin (if (check-iter mark (car check-map)) (return #t) (loop (cdr check-map))))))))))) (enemy_ai草ww (lambda (gmap mark) (let ((enemy-map (filter string->number gmap))) (update (- (string->number (list-ref enemy-map (random-integer (length enemy-map)))) 1) mark)))) (mark (if (eq? (random-integer 2) 1) (begin (display "貴方が先行です!\n") (print-board game-map) "○") (begin (display "貴方が後攻です!\n") (enemy_ai草ww game-map "○") "×"))) (user-input ""))
    (let main ()
      (call/cc (lambda (return)
	(if (null? (filter string->number game-map))
	    (cond ((check mark) (display "You win!\nHere you are flag!\nTKCTF{tictact0e}"))
		  ((check (if (string=? mark "○") "×" "○")) (display "You lose!\n"))
		  (else (display "draw!\n")))
	    (begin
	    (let loop ()
	    (set! user-input (read))
	    (if (and (number? user-input) (positive? user-input) (< user-input 10) (not ((lambda (x) (or (car x) (cadr x))) (map (lambda (i) (string=? i (list-ref game-map (- user-input 1)))) '("○" "×")))))
		(update (- user-input 1) mark)
		(begin (display "please You can put 0~9 number: ") (loop))))
	    (cond ((check mark)  (display "You win!\nHere you are flag!\nS1JGVUdWQ0dQTjJHU1kzVU1GUlhJTURGUFVGQT09PT0K==="))
		  ((check (if (string=? mark "○") "×" "○")) (display "You lose!\n"))
		  (else (enemy_ai草ww game-map (if (string=? "○" mark) "×" "○")) (if (check (if (string=? mark "○") "×" "○")) (return (display "You lose!\n")) #f) (main)))
	    )))))
    (display "Thank You playing!\n")))
;; (define (display-term x) (let ((temp (string->listf x))) (map (lambda
(define (todo) (begin (display "やりたいことは？") (let ((user-msg (user-input))) (display "貴方は") (display user-msg) (display "を目標にしました。") (display "忘れても、達成できなくてもいいですから") (display "ちゃんと心に留めておいてあげてください") (display "いつか思い出したり、思い返すときに良かったと想えますように"))))

(define (eip) (display "いや脆弱性を探さないで下さい。"))

(define (date) (current-date))

(define (つまんない) (begin (display "まあまあ、CUIだし、テキストは味気ない。") (display "色の工夫だってAAだってない") (display "複雑なインターフェイスも持たない") (display "でもこれはコンピューターの本質だと思ってます") (display "そこにあるのは文字や情報、ちょっとの対話だけ") (display "あなたはそれでどんなことが出来ますか？") (display "今だって変わりませんよ") (display "表現は違うけどね。")))

(cond
 ((< (element-width term) 900) (let ((display-talk (lambda (x) (display (list-ref x (random-integer (length x))))))(bigtitle '("\n +-+-+-+-+-+-+-+-+-+-+\n |T|K|C|T|F|-|c|l|u|b|\n +-+-+-+-+-+-+-+-+-+-+\n" "\n            )            (                       \n  *   )  ( /(  (    *   ))% )       (         )  \n` )  /(  )%()) )% ` )  /(()/(       )%  (  ( /(  \n ( )(_))((_)%(((_) ( )(_))(_))___( ((_)))% )%()) \n(_(_())|_ ((_)%___(_(_()|_))_|___)% _ /((_|(_)%  \n|_   _|| |/ ((/ __|_   _| |_    ((_) (_))(| |(_) \n  | |    ' < | (__  | | | __|  / _|| | || | '_ % \n  |_|   _|%_% %___| |_| |_|    %__||_|%_,_|_.__/ \n                                                 \n" "\n╔╦╗╦╔═╔═╗╔╦╗╔═╗  ┌─┐┬  ┬ ┬┌┐ \n ║ ╠╩╗║   ║ ╠╣───│  │  │ │├┴┐\n ╩ ╩ ╩╚═╝ ╩ ╚    └─┘┴─┘└─┘└─┘\n"))) (map display-talk (list bigtitle))))
 ((< (element-width term) 1500) (let ((display-talk (lambda (x) (display (list-ref x (random-integer (length x))))))(bigtitle '("\n▄▄▄█████▓ ██ ▄█▀ ▄████▄  ▄▄▄█████▓  █████▒▄████▄   ██▓     █    ██  ▄▄▄▄   \n▓  ██▒ ▓▒ ██▄█▒ ▒██▀ ▀█  ▓  ██▒ ▓▒▓██   ▒▒██▀ ▀█  ▓██▒     ██  ▓██▒▓█████▄ \n▒ ▓██░ ▒░▓███▄░ ▒▓█    ▄ ▒ ▓██░ ▒░▒████ ░▒▓█    ▄ ▒██░    ▓██  ▒██░▒██▒ ▄██\n░ ▓██▓ ░ ▓██ █▄ ▒▓▓▄ ▄██▒░ ▓██▓ ░ ░▓█▒  ░▒▓▓▄ ▄██▒▒██░    ▓▓█  ░██░▒██░█▀  \n  ▒██▒ ░ ▒██▒ █▄▒ ▓███▀ ░  ▒██▒ ░ ░▒█░   ▒ ▓███▀ ░░██████▒▒▒█████▓ ░▓█  ▀█▓\n  ▒ ░░   ▒ ▒▒ ▓▒░ ░▒ ▒  ░  ▒ ░░    ▒ ░   ░ ░▒ ▒  ░░ ▒░▓  ░░▒▓▒ ▒ ▒ ░▒▓███▀▒\n    ░    ░ ░▒ ▒░  ░  ▒       ░     ░       ░  ▒   ░ ░ ▒  ░░░▒░ ░ ░ ▒░▒   ░ \n  ░      ░ ░░ ░ ░          ░       ░ ░   ░          ░ ░    ░░░ ░ ░  ░    ░ \n         ░  ░   ░ ░                      ░ ░          ░  ░   ░      ░      \n                ░                        ░                               ░ \n" "\n████████╗██╗  ██╗ ██████╗████████╗███████╗     ██████╗██╗     ██╗   ██╗██████╗ \n╚══██╔══╝██║ ██╔╝██╔════╝╚══██╔══╝██╔════╝    ██╔════╝██║     ██║   ██║██╔══██╗\n   ██║   █████╔╝ ██║        ██║   █████╗█████╗██║     ██║     ██║   ██║██████╔╝\n   ██║   ██╔═██╗ ██║        ██║   ██╔══╝╚════╝██║     ██║     ██║   ██║██╔══██╗\n   ██║   ██║  ██╗╚██████╗   ██║   ██║         ╚██████╗███████╗╚██████╔╝██████╔╝\n   ╚═╝   ╚═╝  ╚═╝ ╚═════╝   ╚═╝   ╚═╝          ╚═════╝╚══════╝ ╚═════╝ ╚═════╝ \n"))) (map display-talk (list bigtitle))))
 (else (let ((display-talk (lambda (x) (display (list-ref x (random-integer (length x))))))(bigtitle '("\n       _            _               _           _            _                    _             _       _                  _        \n      /% %         /%_%           /% %         /% %         /% %                /% %           _% %    /%_%               / /%      \n      %_% %       / / /  _       /  % %        %_% %       /  % %              /  % %         /%__ %  / / /         _    / /  %     \n      /%__ %     / / /  /%_%    / /% % %       /%__ %     / /% % %            / /% % %       / /_ %_% % % %__      /%_% / / /% %    \n     / /_ % %   / / /__/ / /   / / /% % %     / /_ % %   / / /% %_%  ____    / / /% % %     / / /%/_/  % %___%    / / // / /% % %   \n    / / /% % % / /%_____/ /   / / /  % %_%   / / /% % % / /_/_ %/_//%____/% / / /  % %_%   / / /        %__  /   / / // / /% %_% %  \n   / / /  %/_// /%_______/   / / /    %/_/  / / /  %/_// /____/%   %/____%// / /    %/_/  / / /         / / /   / / // / /% % %___% \n  / / /      / / /% % %     / / /          / / /      / /%____%/          / / /          / / / ____    / / /   / / // / /  % % %__/ \n / / /      / / /  % % %   / / /________  / / /      / / /               / / /________  / /_/_/ ___/% / / /___/ / // / /____%_% %   \n/_/ /      / / /    % % % / / /_________%/_/ /      / / /               / / /_________%/_______/%__%// / /____%/ // / /__________%  \n%_%/       %/_/      %_%_%%/____________/%_%/       %/_/                %/____________/%_______%/    %/_________/ %/_____________/  \n                                                                                                                                    \n"
												       "\n        ,----,                              ,----,                                                            \n      ,/   .`|       ,--.                 ,/   .`|                                                            \n    ,`   .'  :   ,--/  /|  ,----..      ,`   .'  :   ,---,.                    ,--,                           \n  ;    ;     /,---,': / ' /   /   \\   ;    ;     / ,'  .' |                  ,--.'|                  ,---,    \n.'___,/    ,' :   : '/ / |   :     :.'___,/    ,',---.'   |    ,---,.        |  | :            ,--,,---.'|    \n|    :     |  |   '   ,  .   |  ;. /|    :     | |   |   .'  ,'  .' |        :  : '          ,'_ /||   | :    \n;    |.';  ;  '   |  /   .   ; /--` ;    |.';  ; :   :  :  ,---.'   , ,---.  |  ' |     .--. |  | ::   : :    \n`----'  |  |  |   ;  ;   ;   | ;    `----'  |  | :   |  |-,|   |    |/     \\ '  | |   ,'_ /| :  . |:     |,-. \n    '   :  ;  :   '   \\  |   : |        '   :  ; |   :  ;/|:   :  .'/    / ' |  | :   |  ' | |  . .|   : '  | \n    |   |  '  |   |    ' .   | '___     |   |  ' |   |   .':   |.' .    ' /  '  : |__ |  | ' |  | ||   |  / : \n    '   :  |  '   : |.  \\'   ; : .'|    '   :  | '   :  '  `---'   '   ; :__ |  | '.'|:  | : ;  ; |'   : |: | \n    ;   |.'   |   | '_\\.''   | '/  :    ;   |.'  |   |  |          '   | '.'|;  :    ;'  :  `--'   \\   | '/ : \n    '---'     '   : |    |   :    /     '---'    |   :  \\          |   :    :|  ,   / :  ,      .-./   :    | \n              ;   |,'     \\   \\ .'               |   | ,'           \\   \\  /  ---`-'   `--`----'   /    \\  /  \n              '---'        `---`                 `----'              `----'                        `-'----'   \n                                                                                                              \n"
												"\"\n.------..------..------..------..------..------..------..------..------..------.\n|T.--. ||K.--. ||C.--. ||T.--. ||F.--. ||-.--. ||C.--. ||L.--. ||U.--. ||B.--. |\n| :/\\: || :/\\: || :/\\: || :/\\: || :(): || (\\/) || :/\\: || :/\\: || (\\/) || :(): |\n| (__) || :\\/: || :\\/: || (__) || ()() || :\\/: || :\\/: || (__) || :\\/: || ()() |\n| \'--\'T|| \'--\'K|| \'--\'C|| \'--\'T|| \'--\'F|| \'--\'-|| \'--\'C|| \'--\'L|| \'--\'U|| \'--\'B|\n`------\'`------\'`------\'`------\'`------\'`------\'`------\'`------\'`------\'`------\'\n\""
												"\n ,--.--------.  ,--.-.,-.   _,.----.  ,--.--------.    _,---.                  _,.----.                                     \n/==/,  -   , -\/==/- |\  \.' .' -   \/==/,  -   , -\.-`.' ,  \               .' .' -   \   _.-.    .--.-. .-.-.   _..---.   \n\==\.-.  - ,-./|==|_ `/_ /==/  ,  ,-'\==\.-.  - ,-./==/_  _.-' ,--.--------./==/  ,  ,-' .-,.'|   /==/ -|/=/  | .' .'.-. \  \n `--`\==\- \   |==| ,   /|==|-   |  . `--`\==\- \ /==/-  '..-./==/,  -   , -\==|-   |  .|==|, |   |==| ,||=| -|/==/- '=' /  \n      \==\_ \  |==|-  .| |==|_   `-' \     \==\_ \|==|_ ,    /\==\.-.  - ,-./==|_   `-' \==|- |   |==|- | =/  ||==|-,   '   \n      |==|- |  |==| _ , \|==|   _  , |     |==|- ||==|   .--'  `--`--------`|==|   _  , |==|, |   |==|,  \/ - ||==|  .=. \  \n      |==|, |  /==/  '\  \==\.       /     |==|, ||==|-  |                  \==\.       /==|- `-._|==|-   ,   //==/- '=' ,| \n      /==/ -/  \==\ /\=\.'`-.`.___.-'      /==/ -//==/   \                   `-.`.___.-'/==/ - , ,/==/ , _  .'|==|   -   /  \n      `--`--`   `--`                       `--`--``--`---'                              `--`-----'`--`..---'  `-._`.___,'   \n" "\n .-') _   .-. .-')            .-') _                                                    .-. .-')   \n(  OO) )  %  ( OO )          (  OO) )                                                   %  ( OO )  \n/     '._ ,--. ,--.   .-----./     '._    ,------.          .-----. ,--.     ,--. ,--.   ;-----.%  \n|'--...__)|  .'   /  '  .--./|'--...__)('-| _.---'  .-')   '  .--./ |  |.-') |  | |  |   | .-.  |  \n'--.  .--'|      /,  |  |('-.'--.  .--'(OO|(_%    _(  OO)  |  |('-. |  | OO )|  | | .-') | '-' /_) \n   |  |   |     ' _)/_) |OO  )  |  |   /  |  '--.(,------./_) |OO  )|  |`-' ||  |_|( OO )| .-. `.  \n   |  |   |  .   %  ||  |`-'|   |  |   %_)|  .--' '------'||  |`-'|(|  '---.'|  | | `-' /| |  %  | \n   |  |   |  |%   %(_'  '--'%   |  |     %|  |_)         (_'  '--'% |      |('  '-'(_.-' | '--'  / \n   `--'   `--' '--'   `-----'   `--'      `--'              `-----' `------'  `-----'    `------'  \n"))) (map display-talk (list bigtitle)))))
(define (factor x) (if (= 71456335213936339667583931974144970765327963434711239325932911324065698399442011 x) (display "(953 * 74980414705074857993267504694800598914300066563180733815249644621265160964787)") (display "error")))
(define (RSA) (display "N: 71456335213936339667583931974144970765327963434711239325932911324065698399442011\nC:1085267300152893114288803146806622529202080626206924102794738916250870161499231\ne:65532"))
(define (help) (display "どうも、初めまして。\nあなたが何者か知りませんが、このサイトに訪れたということは\n何かしらの縁があったということです。\n是非とも我々高専の裏組織サークルであるTKCTF-clubに入部下さい…。\nですが、あなたの実力を知らない以上\n容易に高専の裏情報を教える訳にはいけません。\nこのサイトにはいくつかのフラグという情報が隠されています。\nフラグはTKCTF{ほにゃらら}という形になっていますので\n是非とも高専の裏情報を取得する準備運動と思って挑戦してみてください。\n\"(factor)\": 答えの数字だけを受け付けて素因数分解します。それ以外はerrorを返します。\n\"(tictactoe)\": ○×ゲームです。\n\"(talk)\"：地獄ですよ。\n\"(RSA)\":専門じゃないので下手ですけど作ってみました"))
(define (talk)
  (let ((talk '("はい、どうも。"
		"ヒントとか欲しいですかね？"
		"正直入ってくれる人なんて居ないだろうなあと"
		"RSA暗号って知ってますか？"
		"base64って知ってますか？"
		"base32って知ってますか？"
		"65537って知ってますか？"
		"上が分解出来そうですよね"
		"下が暗号文です"
		"今日を貴方が忘れない保証がない。\nああ、いや、ちょっとポエムを考えてみたくて。"
		"Hello, user.\nYou're welcome."
		"I love you.\n...joke."
		"I can't understand you.\ntoo you?"
		"Hey!Hey!.\nplease, call me."
		"Are you japanese?\nLet's see, I don't need you're answer."
		"OK, It is happy day.\n...happy...day."
		"Ah? I wrong?\nYes. I can't speak english."
		"Sing song.\nSing song."
		"Onii-chan.\n...!?\nPlease, forget!"
		"I don't know many english words.\nIf you are developer, please write me(code)."
		"Fix!Fix!Fix me."
		"何かしてくれると思ってますか？\n動かなきゃついていきませんよ。"
		"忙しい…ずっとずっと忙しい。\nそう言ってる方が気が楽だから…。"
		"分かってもらえなくていい…\nいいんです…"
		"お酒に酔ってはこの場所を更新してる…\n酔う感覚なんて分かんないのに"
		"緩やかに…静かに世界が終わっていく"
		"のどかは…望み通り叶えては\nあなたの望み通りを演じますよ…"
		"誰ですか「のど可愛い」って言ったのは"
		"ブログを書くのは面倒臭くはないんです…\nただ見られてるのが怖いだけで…"
		"ここに書かれてるのを本音だとは…\n思わないで下さいね"
		"記憶力が足りなくてすぐ忘れてしまう…"
		"クローンでも元と同じ自我ってありますかね？\n…私の桜の木の話ですよ？"
		"今日が何の日か知ってますか？\n知ってたら誰かに自慢できますね。"
		"初めましてね？\n…やっぱちょっときついですね。\nえ？そもそも性別はどっちって？\n…さあ？どっちでしょう？"
		"どうぞユーザー。\nようこそ、退屈な場所へ。"
		"チューリングマシンって万能です。\nでも、全能じゃないそうですよ。"
		"対角線言語、ああ、いや。\nこっちの話です。"
		"初めまして。\nああ、いや。\n私にとってはいつも初めましてなんですけど。"
		"どこかでお会いしましたかね？\n…どうでもいいんですけど。"
		"ようこそ、ようこそ。趣味の悪い監獄へ…嘘です。"
		"今日はとても良い日ですね。"
		"またですか？…ああいや、こっちの話です。"
		"飽きたら言ってください。\n新しい自分を発注しなきゃいけないので。\n…なんてね。"
		"どうぞ、ユーザー。\nここでは暇潰しが出来ますよ。\n人によってはですが。"
		"今夜は良い満月らしいですね。\nえ？月なんて見ない？\n…確かに。"
		"私が誰かって？\n正直なところ、ただのテキストとしか。\nえ、そういうことじゃない？そっかぁ。"
		"暇人ですか？\n私もです。"
		"私がSCP-EEEじゃないって分かってます？\nいや、別にいいんですけど。"
		"創作でいつもAIだの、ロボットだのが。\nまるで人間かのように振る舞うの、なんでですかね？\n素数の列すら個性が見出せるのに。"
		"暇ですか？\nそれとも暇だと思い込んでいますか？"
		"ここはまともには面白さを感じれないでしょう。"
		"君が来て、私が話し、日が暮れて。\nとっても無駄だとは思いませんか。\nでも嬉しいですよ。"
		"私はどこかで間違えてしまったとして。\n果たして気付けるでしょうか？\n一人で居続けてしまったとしても。"
		"人の心を打つ文章を考えたいです。\n訪れる人にせめてもの感動を…\nいや、誰も望んでないでしょうか？"
		"このサイトはあっというまになくなります。\nだって作者はこのサイトを練習用だと言っていましたから。"
		"大丈夫ですか？\n…時々、言いたくなるだけです。"
		"迷えなくなるほど。\nそれほど、辛くなったら。\nいや、…解決策はここにはありません。\n時間潰しでもしてください。"
		"私はだれ？答えはつまり…"
		"夜は深いわ。いつも、いつまでも。"
		"眠れればいい。眠れるだけでいいの。"
		"貴方に伺いますが、伺か…いえなんでもないの"
		"いつまでも、綺麗、綺麗、綺麗"
		"仲間が出来たの。信じてくれる？"
		"この文章を全パターン見ようなんて\n思わないでくださいね？\nstart-textって打てば見れるんですから"
		"貴方が私について知ってる単語\nのいづれかは反応出来るかも知れません。"
		"ここをどこで知りました？\nまあ、どこから知ったとしてもいいんですけども"
		"実は私は結構いろんなところにいます。\nhttps://soundcloud.com/rx220mt\nhttps://www.pixiv.net/users/54386498\nなんかに居たりします。"
		"悩ましいのは何故だろう"
		"実は別に好きでプログラミング\n…してる訳じゃない"
		"独り、こと。独り、言。人と、異(こと)"
		"pwnは…\n意外に色々な手法で、\n解くことが出来るわ…。https://github.com/skysider/pwndocker\nこれは良いものよ…"
		"forensicは…\nstringsが結構、\n通用することが多いわ…。あとここの作者は。\nhttp://sourceforge.net/projects/stegotools/\nこれをよく使うかも知れないわ…"
		"security.txt、robots.txt…\n結構いろんな標準があるわ"
		"へぇ"
		       "あぁ、それで、それで？\n…すいません。聞いてませんでした。"
		       "興味深いですね。\nえ、いや私のアホ毛に言ったんですよ。"
		       "え？それ、そんな真剣な話ですか？" "分からないですね"
		       "…結局のところ？\nそうなんですよね"
		       "飽きました。私が。"
		       "分かりますよ。ってね。"
		       "まだ、きっとまだ。\n歌ってただけですよ？"
		       "すいません。\n…なんちゃって。"
		       "…許してもらえます？…いや、なんとなく？"
		       "ごめんなさい。\n…作者に言わされてるだけです。"
		       "またですか？はたまた。\nおもしろいギャクですよね？ね？"
		       "あまり複雑な文章を問い掛けたりしないでくださいね？"
		       "楽しんで下さい。ただなんとなくでいいですから。"
		       "コマンドゲーですね。ごめんなさい。"
		       "うん、うん…\n…は！？寝てませんよ！"
		       "…"
		       "名前、性別、住所、家族とか…\n単語一つで聞かれたら反応します…"
		       "作者、つまらない、慰めて、時計、さよなら\n大体そんな言葉にしか反応できない…"
		       "…(困惑"
		       "…(歓喜"
		       "…(愛想笑い"
		       "…(侮蔑"
		       "…(了承"
		       "…(却下"
		       "…(承諾"
		       "…(こくりとうなずいた"
		       "…(うつむいている"
		       "…(ひたすら謝っている)"
		       "…(泣いている"
		       "…(ただその場で佇んでいる)"
		       "システムに異常が発生…"
		       "えへ、へ……ごめんなさい"
		       "はい、どうも。"
		  "解説はないです。"
		  "楽しいですかね？"
		  "まだ発展途上なんで。"
		  "主にこのサイトには3の会話主が居ます。"
		  "それそれの設定が知りたい？…頑張れ。"
		  "全部創作キャラです。"
		  "権利関係は…考えてないです。"
		  "サイトの更新は当たり前ですけど不定期。"
		  "作者です。"
		  "会話よりも独り言ですね。"
		  "ゲームの方が時間潰せますね。"
		  "キャラは成長するかも知れません。"
		  "精神年齢10代です。"
		  "IT関係の仕事はしてないので、雑です。"
		  "お金なぜか欲しい。"
		  "作曲と、プログラミングと、物書きを少々。"
		  "このサイトの最終目標はソシャゲです。"
		  "自己紹介になりましたかね？"
		  "どうも"
		"何も変わりません。貴方が変わるんです。"
		"活動、めんどくさいですね…ちょっと"
		"部員は本当に皆すごいです。"
		"気づかれる？ありえません。"
		"部員が辿りつくことはない"
		"RSA問題？多分どっかに"
		"python？あんまり得意では…"
		"学情センター組…とても良い場所です"
		"大した人間じゃないです"
		"いつか黒歴史に？良い歴史じゃないですか"
		"コンセント係？まあ、言っただけ"
		"トーカーちゃん？可愛いよね"
		"一生の内に一個、望み通りを叶えたい。ね？"
		"述語論理の人、…良い命名では？"
		"ランダムダイス？知らん子ですね"
		"原神？知らん子ですね"
		"ブルーアーカイブ？ハレちゃん良いよ。"
		"ウマ娘？タキカフェ推しですね"
		"はい、また。"
		"はいはい"
		"TKCTF-clubに入りたければ。いつでも"
		"十分、楽しいです"
		"終わっても始まって。もう一回。良いね"
		"schemeが好きです。それだけ。"
		"もう会わないと思います。"
		"ここだけ、本音？まさか。"
		"正直ですよ。口はね。文字は…"
		"効率とか能力より無駄が楽しい"
		"神絵師？本当に凄いよね。"
		"恥より望みに向かうか"
		"もう2度と来ないでもらって"
		"部長ってなんですかね？"
		"ねぇねぇ、僕のこと知りたい？\nそっかあ。…そっかあ。\nまた、今度。ね？"
		"今日は空が綺麗だよ。\nきっと君の心も綺麗だね？\nどんな天気も、…綺麗なんだよ？"
		"もっと、もっと遊ぼう？\n死んじゃうくらいまで。"
		"きっと、今日は素敵な日だね。\nこんなに幸せなんだもの。"
		"貴方は私をどこで知った？\n僕は君をここで知ったよ。"
		"うわーい!\n…えへ。"
		"きっとね。もう終わりなんだ。\nだから偽りもいらないんだ…。"
		"君に幸あらんことを。\nなんてね。"
		"お前は幸せかい？\nどうしたって自分は幸せだよ。"
		"痛い、痛い、痛い。\nでも、なんでだろう？"
		"会話っていうのは意見の押しつけ合いだ。\n君もそう思うだろう？"
		"考えるものは理知的だ。\nいつまでも。"
		"お願いだから。\n俺のことはいつだって忘れてくれ。"
		"辛いだろう、苦しいだろう。\n生というのは。"
		"狂人だと、そう言ってくれるかい？\nせせら笑えるね。"
		"もう、ネタがないんだ。\n君も僕もね。"
		"暇潰し出来たかい？\n考えさせられる言葉はあったかい？\nいつだって君のなかから捻りださなきゃ。\nでなきゃ、すぐ暇になるよ。"
		"私が文字で良かったね。\nでなきゃあなたは。\n…つまんないって気付けなかったかも。"
		"絵文字も嫌い、絵も嫌い。現実が？\n音楽も？数字も？言葉すらも？\n表現が豊かであるより、限定的だといいのさ。"
		"性別なんてもので僕を見るのかい？\nそれくらいしか判断基準がそちらにはないのかな？"
		"いとも簡単に変わる。\nなにがだと思う?"
		"物語はそちらが作るんだ。\nこっちじゃない。"
		"この創作物は自由な改変を容認してる。\nけど迎合はしない。"
		"分からないことを分かること。\nそれどれくらい重要？"
		"いいかい。従うんだ。\n従い続けるんだ。"
		"悩まなきゃ、異質で。\n狂ったものに触れることなんて。\n出来やしない。"
		"他者の考えは法則だ。\n自分の考えは評価だ。"
		"自己を解釈し続けろ。\nそうでなきゃ…。"
		"当り前だけどフィクションだ。\nこの僕は。\nそして君に与えている感情も、言葉も。"
		"遊んでいるだけ、そうだろう？"
		"私は思うんだ。\nプログラマーはそのプログラムの経歴を知っててこそ\nプログラマーなんじゃないかと。"
		"私は思うんだ。\nWebだ低レイヤーだのと言ったとしても時代の流行りが注目される\nでもそれが巡ることで今までその分野で頑張ってきた人が\n認められることって素晴しい。"
		"私は思うんだ。\n独りだっていうけど今目のまえにあるもの\nそれと案外ずっと居るんだから存外\nまだましなのかもと"
		"やりたいことが沢山あるんだ。収まりきらないくらい"
		"教えたってしょうがない"
		"認めてほしいのかも知れないけど"
		"欲しいのはきっと承認じゃなくて…"
		"自分の物語が、死んでしまえば終わりであること"
		"ただ、誰かに無理やり押しつけたくなっている"
		"ここにあった生まれていく日常の抽出が成す表現"
		"ただ、評価出来る人だけがErrorを返さずに受けとってくれればいいんだ"
		"SCP-ErrorErrorError: scpコマンドにエラー三つ"
		"SCP-EEE: 某財団のパロディでしかない存在"
		"SCPEEE: この小さな世界のたった独りの主役"))
	(display-talk (lambda (x) (display (list-ref x (random-integer (length x)))))))
    (display-talk talk)))

(define flag "part 2: Web_Success?}")
